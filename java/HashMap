### PUT

1. 根据Key通过哈希算法与与运算得出数组下标；
2. 如果数组下表位置元素为空，则将key与value封装成对象（1.7Entry，1.8Node）并存入该位置；
3. 如果数组下标元素不为空
    1. 1.7先判断是否需要扩容，不扩容就封装成Entry对象，使用头插法插入链表；（头插法速度最快。）
    2. 1.8先判断Node的类型，是红黑树Node还是链表Node
        1. 如果是红黑树Node，则将key和value封装为黑红树节点添加到红黑树中，如果存在key则更新value值；
        2. 如果是链表Node，则将key和value封装为链表Node，通过尾插法插入链表中。因为是尾插法，所以需要遍历链表，遍历过程中如果存在key则更新value值。插入后查看当前链表节点数目，如果超过了8，则转成红黑树；（为什么用尾插？**插入后必然需要遍历链表以确定当前链表大小是否需要扩容。**）
        3. 将key和value封装成Node插入链表或红黑树后，判断是否需要扩容，如果不需要扩容则结束put方法；